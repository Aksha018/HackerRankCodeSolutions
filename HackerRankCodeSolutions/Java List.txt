For this problem, we have  types of queries you can perform on a List:

Insert y at index x :

Insert
x y
Delete the element at index x :

Delete
x
Given a list, L, of N integers, perform Q queries on the list. Once all queries are completed, print the modified list as a single line of space-separated integers.

Input Format

The first line contains an integer, N  (the initial number of elements in L).
The second line contains N space-separated integers describing L.
The third line contains an integer, Q (the number of queries).
The 2Q subsequent lines describe the queries, and each query is described over two lines:

If the first line of a query contains the String Insert, then the second line contains two space separated integers , and the value  must be inserted into  at index .
If the first line of a query contains the String Delete, then the second line contains index , whose element must be deleted from .


Sample Input

5
12 0 1 78 12
2
Insert
5 23
Delete
0
Sample Output

0 1 78 12 23
------------------------------------------------------------------------------------------------------------------------

Solution:

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
 public static void main(String[] args) {
  Scanner st = new Scanner(System.in);
  int n = st.nextInt();
  assert(n >= 1 && n <= 4000);
  LinkedList L = new LinkedList();
  for (int i = 0; i < n; i++) {
   int x = st.nextInt();
   L.add(i, x);
  }

  int q = st.nextInt();
  assert(q >= 1 && q <= 4000);

  for (int i = 0; i < q; i++) {
   String s = st.next();
   if (s.equals("Insert")) {

    int x = st.nextInt();
    int y = st.nextInt();
    L.add(x, y);
   } 
   else {
    int y = st.nextInt();
    L.remove(y);
   }

  }
  Iterator <Integer> Iterator = L.iterator();
  boolean flag = false;
  while (Iterator.hasNext()) {
      
   if(flag)
    System.out.print(" ");
   flag = true;
   System.out.print(Iterator.next());
  }
  System.out.print("\n");
 }
}
